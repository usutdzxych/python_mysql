"""
@author:兵慌码乱
@project_name:python图书管理系统
@time:2021/06/01 17:51
@remarks:系统管理员界面模块
"""

from PyQt5.QtWidgets import QTableWidgetItem, QMessageBox
from connect import *
from PyQt5 import QtCore, QtGui, QtWidgets

cursor, conn = connect()


# 管理员界面设计模块
class Ui_systemadmin(object):

    def setupUi(self, systemadmin):
        systemadmin.setObjectName("systemadmin")
        systemadmin.resize(738, 747)
        self.tabWidget = QtWidgets.QTabWidget(systemadmin)
        self.tabWidget.setGeometry(QtCore.QRect(9, 9, 721, 731))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.widget = QtWidgets.QWidget(self.tab)
        self.widget.setGeometry(QtCore.QRect(10, 10, 701, 691))
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.readerid = QtWidgets.QLineEdit(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.readerid.sizePolicy().hasHeightForWidth())
        self.readerid.setSizePolicy(sizePolicy)
        self.readerid.setObjectName("readerid")
        self.horizontalLayout.addWidget(self.readerid)
        self.horizontalLayout_7.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        self.readname = QtWidgets.QLineEdit(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.readname.sizePolicy().hasHeightForWidth())
        self.readname.setSizePolicy(sizePolicy)
        self.readname.setObjectName("readname")
        self.horizontalLayout_2.addWidget(self.readname)
        self.horizontalLayout_7.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_4 = QtWidgets.QLabel(self.widget)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_5.addWidget(self.label_4)
        self.unit = QtWidgets.QComboBox(self.widget)
        self.unit.setObjectName("unit")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.unit.addItem("")
        self.horizontalLayout_5.addWidget(self.unit)
        self.horizontalLayout_7.addLayout(self.horizontalLayout_5)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_3 = QtWidgets.QLabel(self.widget)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_4.addWidget(self.label_3)
        self.sex = QtWidgets.QComboBox(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sex.sizePolicy().hasHeightForWidth())
        self.sex.setSizePolicy(sizePolicy)
        self.sex.setObjectName("sex")
        self.sex.addItem("")
        self.sex.addItem("")
        self.horizontalLayout_4.addWidget(self.sex)
        self.horizontalLayout_7.addLayout(self.horizontalLayout_4)
        self.verticalLayout.addLayout(self.horizontalLayout_7)
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.label_6 = QtWidgets.QLabel(self.widget)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_9.addWidget(self.label_6)
        self.readtype = QtWidgets.QComboBox(self.widget)
        self.readtype.setObjectName("readtype")
        self.readtype.addItem("")
        self.readtype.addItem("")
        self.readtype.addItem("")
        self.horizontalLayout_9.addWidget(self.readtype)
        self.horizontalLayout_13.addLayout(self.horizontalLayout_9)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.label_7 = QtWidgets.QLabel(self.widget)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_10.addWidget(self.label_7)
        self.totalnumber = QtWidgets.QLineEdit(self.widget)
        self.totalnumber.setObjectName("totalnumber")
        self.horizontalLayout_10.addWidget(self.totalnumber)
        self.horizontalLayout_13.addLayout(self.horizontalLayout_10)
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.label_8 = QtWidgets.QLabel(self.widget)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_11.addWidget(self.label_8)
        self.number = QtWidgets.QLineEdit(self.widget)
        self.number.setObjectName("number")
        self.horizontalLayout_11.addWidget(self.number)
        self.horizontalLayout_13.addLayout(self.horizontalLayout_11)
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.label_9 = QtWidgets.QLabel(self.widget)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_12.addWidget(self.label_9)
        self.money = QtWidgets.QLineEdit(self.widget)
        self.money.setObjectName("money")
        self.horizontalLayout_12.addWidget(self.money)
        self.horizontalLayout_13.addLayout(self.horizontalLayout_12)
        self.verticalLayout.addLayout(self.horizontalLayout_13)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.addr = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.addr.sizePolicy().hasHeightForWidth())
        self.addr.setSizePolicy(sizePolicy)
        self.addr.setObjectName("addr")
        self.horizontalLayout_8.addWidget(self.addr)
        self.alterr = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.alterr.sizePolicy().hasHeightForWidth())
        self.alterr.setSizePolicy(sizePolicy)
        self.alterr.setObjectName("alterr")
        self.horizontalLayout_8.addWidget(self.alterr)
        self.deleter = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.deleter.sizePolicy().hasHeightForWidth())
        self.deleter.setSizePolicy(sizePolicy)
        self.deleter.setObjectName("deleter")
        self.horizontalLayout_8.addWidget(self.deleter)
        self.verticalLayout.addLayout(self.horizontalLayout_8)
        self.readerinfos = QtWidgets.QTableWidget(self.widget)
        self.readerinfos.setObjectName("readerinfos")
        self.readerinfos.setColumnCount(9)
        self.readerinfos.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.readerinfos.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.readerinfos.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.readerinfos.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.readerinfos.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.readerinfos.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.readerinfos.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.readerinfos.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.readerinfos.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.readerinfos.setHorizontalHeaderItem(8, item)
        self.verticalLayout.addWidget(self.readerinfos)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.admininfos = QtWidgets.QTableWidget(self.tab_2)
        self.admininfos.setGeometry(QtCore.QRect(280, 20, 411, 641))
        self.admininfos.setObjectName("admininfos")
        self.admininfos.setColumnCount(4)
        self.admininfos.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.admininfos.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.admininfos.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.admininfos.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.admininfos.setHorizontalHeaderItem(3, item)
        self.layoutWidget = QtWidgets.QWidget(self.tab_2)
        self.layoutWidget.setGeometry(QtCore.QRect(20, 430, 239, 25))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout_18.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.adda = QtWidgets.QPushButton(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.adda.sizePolicy().hasHeightForWidth())
        self.adda.setSizePolicy(sizePolicy)
        self.adda.setObjectName("adda")
        self.horizontalLayout_18.addWidget(self.adda)
        self.altera = QtWidgets.QPushButton(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.altera.sizePolicy().hasHeightForWidth())
        self.altera.setSizePolicy(sizePolicy)
        self.altera.setObjectName("altera")
        self.horizontalLayout_18.addWidget(self.altera)
        self.deletea = QtWidgets.QPushButton(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.deletea.sizePolicy().hasHeightForWidth())
        self.deletea.setSizePolicy(sizePolicy)
        self.deletea.setObjectName("deletea")
        self.horizontalLayout_18.addWidget(self.deletea)
        self.layoutWidget1 = QtWidgets.QWidget(self.tab_2)
        self.layoutWidget1.setGeometry(QtCore.QRect(70, 240, 144, 141))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.layoutWidget1)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.label_11 = QtWidgets.QLabel(self.layoutWidget1)
        self.label_11.setObjectName("label_11")
        self.horizontalLayout_15.addWidget(self.label_11)
        self.adminname = QtWidgets.QLineEdit(self.layoutWidget1)
        self.adminname.setObjectName("adminname")
        self.horizontalLayout_15.addWidget(self.adminname)
        self.verticalLayout_3.addLayout(self.horizontalLayout_15)
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.label_10 = QtWidgets.QLabel(self.layoutWidget1)
        self.label_10.setObjectName("label_10")
        self.horizontalLayout_14.addWidget(self.label_10)
        self.adminID = QtWidgets.QLineEdit(self.layoutWidget1)
        self.adminID.setObjectName("adminID")
        self.horizontalLayout_14.addWidget(self.adminID)
        self.verticalLayout_3.addLayout(self.horizontalLayout_14)
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.label_12 = QtWidgets.QLabel(self.layoutWidget1)
        self.label_12.setObjectName("label_12")
        self.horizontalLayout_16.addWidget(self.label_12)
        self.adminpassword = QtWidgets.QLineEdit(self.layoutWidget1)
        self.adminpassword.setObjectName("adminpassword")
        self.horizontalLayout_16.addWidget(self.adminpassword)
        self.verticalLayout_3.addLayout(self.horizontalLayout_16)
        self.tabWidget.addTab(self.tab_2, "")
        self.getreadersinfo()
        self.getadmininfo()
        self.retranslateUi(systemadmin)
        self.tabWidget.setCurrentIndex(0)
        self.readerinfos.setEditTriggers(QtWidgets.QAbstractItemView.EditKeyPressed)
        self.readerinfos.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.admininfos.setEditTriggers(QtWidgets.QAbstractItemView.EditKeyPressed)
        self.admininfos.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        QtCore.QMetaObject.connectSlotsByName(systemadmin)
        self.readerinfos.activated.connect(self.displayinfo)
        self.admininfos.activated.connect(self.displayadmininfo)
        self.addr.clicked.connect(self.addreader)
        self.readtype.activated.connect(self.auto)
        self.alterr.clicked.connect(self.alterreader)
        self.deleter.clicked.connect(self.deletereader)
        self.adda.clicked.connect(self.addadmin)
        self.altera.clicked.connect(self.alteradmin)
        self.deletea.clicked.connect(self.deleteadmin)

    def retranslateUi(self, systemadmin):
        _translate = QtCore.QCoreApplication.translate
        systemadmin.setWindowTitle(_translate("systemadmin", "系统管理员系统"))
        self.label.setText(_translate("systemadmin", "读者ID"))
        self.label_2.setText(_translate("systemadmin", "姓名"))
        self.label_4.setText(_translate("systemadmin", "单位"))
        self.unit.setItemText(0, _translate("systemadmin", "建筑系"))
        self.unit.setItemText(1, _translate("systemadmin", "土木工程系"))
        self.unit.setItemText(2, _translate("systemadmin", "环境工程系"))
        self.unit.setItemText(3, _translate("systemadmin", "工程力学系"))
        self.unit.setItemText(4, _translate("systemadmin", "计算机系"))
        self.label_3.setText(_translate("systemadmin", "性别"))
        self.sex.setItemText(0, _translate("systemadmin", "男"))
        self.sex.setItemText(1, _translate("systemadmin", "女"))
        self.label_6.setText(_translate("systemadmin", "读者类型"))
        self.readtype.setItemText(0, _translate("systemadmin", "本科生"))
        self.readtype.setItemText(1, _translate("systemadmin", "研究生"))
        self.readtype.setItemText(2, _translate("systemadmin", "教师"))
        self.label_7.setText(_translate("systemadmin", "可借册数"))
        self.label_8.setText(_translate("systemadmin", "在借册数"))
        self.label_9.setText(_translate("systemadmin", "欠款"))
        self.addr.setText(_translate("systemadmin", "添加"))
        self.alterr.setText(_translate("systemadmin", "修改"))
        self.deleter.setText(_translate("systemadmin", "删除"))
        item = self.readerinfos.horizontalHeaderItem(0)
        item.setText(_translate("systemadmin", "读者ID"))
        item = self.readerinfos.horizontalHeaderItem(1)
        item.setText(_translate("systemadmin", "姓名"))
        item = self.readerinfos.horizontalHeaderItem(2)
        item.setText(_translate("systemadmin", "性别"))
        item = self.readerinfos.horizontalHeaderItem(3)
        item.setText(_translate("systemadmin", "单位"))
        item = self.readerinfos.horizontalHeaderItem(4)
        item.setText(_translate("systemadmin", "读者类型"))
        item = self.readerinfos.horizontalHeaderItem(5)
        item.setText(_translate("systemadmin", "可借册数"))
        item = self.readerinfos.horizontalHeaderItem(6)
        item.setText(_translate("systemadmin", "在借册数"))
        item = self.readerinfos.horizontalHeaderItem(7)
        item.setText(_translate("systemadmin", "密码"))
        item = self.readerinfos.horizontalHeaderItem(8)
        item.setText(_translate("systemadmin", "欠款"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("systemadmin", "读者信息录入"))
        item = self.admininfos.horizontalHeaderItem(0)
        item.setText(_translate("systemadmin", "ID"))
        item = self.admininfos.horizontalHeaderItem(1)
        item.setText(_translate("systemadmin", "姓名"))
        item = self.admininfos.horizontalHeaderItem(2)
        item.setText(_translate("systemadmin", "类型"))
        item = self.admininfos.horizontalHeaderItem(3)
        item.setText(_translate("systemadmin", "密码"))
        self.adda.setText(_translate("systemadmin", "添加"))
        self.altera.setText(_translate("systemadmin", "修改"))
        self.deletea.setText(_translate("systemadmin", "删除"))
        self.label_11.setText(_translate("systemadmin", "姓名"))
        self.label_10.setText(_translate("systemadmin", "ID"))
        self.label_12.setText(_translate("systemadmin", "密码"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("systemadmin", "图书管理员信息录入"))

    # 获取所有读者的信息
    def getreadersinfo(self):
        sql = 'SELECT * FROM readers order by ID'
        res = cursor.execute(sql)
        readers = cursor.fetchall()
        self.readerinfos.setRowCount(res)
        for i in range(res):
            reader = readers[i]
            for j in range(9):
                self.readerinfos.setItem(i, j, QTableWidgetItem(str(reader[j])))

    # 刷新
    def displayinfo(self):
        s = self.readerinfos.currentRow()
        self.readerid.setText(self.readerinfos.item(s, 0).text())
        self.readname.setText(self.readerinfos.item(s, 1).text())
        self.totalnumber.setText(self.readerinfos.item(s, 5).text())
        self.number.setText(self.readerinfos.item(s, 6).text())
        self.money.setText(self.readerinfos.item(s, 8).text())

    # 添加读者
    def addreader(self):
        id = self.readerid.text()
        name = self.readname.text()
        runit = self.unit.currentText()
        rsex = self.sex.currentText()
        rtype = self.readtype.currentText()
        total = int(self.totalnumber.text())
        num = int(self.number.text())
        rmoney = self.money.text()
        sql = 'SELECT * FROM readers WHERE ID="%s"' % id
        res = cursor.execute(sql)
        if res:
            QMessageBox.warning(self, "警告", "该读者ID已被占用！", QMessageBox.Yes)
        else:
            value = (id, name, rsex, runit, rtype, total, num)
            sql = 'INSERT INTO readers(`ID`, `姓名`, `性别`, `单位`, `读者类型`, `可借册数`, `在借册数`) VALUES ("%s","%s","%s","%s","%s",%d,%d);' % value
            cursor.execute(sql)
            conn.commit()
            QMessageBox.warning(self, "提示", "添加成功！", QMessageBox.Yes)
            self.getreadersinfo()

    # 添加读者设置角色
    def auto(self):
        if self.readtype.currentText() == '本科生':
            self.totalnumber.setText('10')
        elif self.readtype.currentText() == '研究生':
            self.totalnumber.setText('20')
        elif self.readtype.currentText() == '教师':
            self.totalnumber.setText('30')

    # 修改读者信息
    def alterreader(self):
        id = self.readerid.text()
        name = self.readname.text()
        runit = self.unit.currentText()
        rsex = self.sex.currentText()
        rtype = self.readtype.currentText()
        total = int(self.totalnumber.text())
        num = int(self.number.text())
        rmoney = float(self.money.text())
        sql = 'SELECT * FROM readers WHERE ID="%s"' % id
        res = cursor.execute(sql)
        value = (name, rsex, runit, rtype, total, num, rmoney, id)
        sql = 'UPDATE readers SET 姓名="%s",性别="%s",单位="%s",读者类型="%s",可借册数=%d,在借册数=%d,欠款=%.2f WHERE ID="%s"' % value
        cursor.execute(sql)
        conn.commit()
        QMessageBox.warning(self, "提示", "修改成功！", QMessageBox.Yes)
        self.getreadersinfo()

    # 删除读者信息
    def deletereader(self):
        res = QMessageBox.warning(self, "警告", "即将删除, 确定？", QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
        if res == QMessageBox.Yes:
            id = self.readerid.text()
            sql = 'DELETE FROM readers WHERE ID="%s"' % id
            cursor.execute(sql)
            conn.commit()
            QMessageBox.warning(self, "提示", "删除成功！", QMessageBox.Yes)
            self.getreadersinfo()

    # 获取图书管理员的信息
    def getadmininfo(self):
        sql = 'SELECT * FROM workers WHERE type="图书管理员" order by ID'
        res = cursor.execute(sql)
        admins = cursor.fetchall()
        self.admininfos.setRowCount(res)
        for i in range(res):
            admin = admins[i]
            for j in range(4):
                self.admininfos.setItem(i, j, QTableWidgetItem(str(admin[j])))

    def addadmin(self):
        id = self.adminID.text()
        name = self.adminname.text()
        password = self.adminpassword.text()
        sql = 'SELECT * FROM workers WHERE ID="%s"' % id
        res = cursor.execute(sql)
        if res:
            QMessageBox.warning(self, "警告", "该ID已被占用！", QMessageBox.Yes)
        else:
            value = (id, name, password)
            sql = 'INSERT INTO workers(`ID`, `姓名`, `type`, `password`) VALUES ("%s","%s","图书管理员","%s");' % value
            print(sql)
            cursor.execute(sql)
            conn.commit()
            QMessageBox.warning(self, "提示", "添加成功！", QMessageBox.Yes)
            self.getadmininfo()

    def displayadmininfo(self):
        s = self.admininfos.currentRow()
        self.adminname.setText(self.admininfos.item(s, 1).text())
        self.adminID.setText(self.admininfos.item(s, 0).text())
        self.adminpassword.setText(self.admininfos.item(s, 3).text())

    def alteradmin(self):
        id = self.adminID.text()
        name = self.adminname.text()
        password = self.adminpassword.text()
        value = (name, password, id)
        sql = 'UPDATE workers SET 姓名="%s",type="图书管理员",password="%s" WHERE ID="%s"' % value
        cursor.execute(sql)
        conn.commit()
        self.getadmininfo()
        QMessageBox.warning(self, "提示", "修改成功！", QMessageBox.Yes)
        self.getadmininfo()

    def deleteadmin(self):
        res = QMessageBox.warning(self, "警告", "即将删除, 确定？", QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
        if res == QMessageBox.Yes:
            id = self.adminID.text()
            sql = 'DELETE FROM workers WHERE ID="%s"' % id
            cursor.execute(sql)
            conn.commit()
            QMessageBox.warning(self, "提示", "删除成功！", QMessageBox.Yes)
            self.getadmininfo()
